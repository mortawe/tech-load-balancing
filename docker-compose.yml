version: "3.5"

services:

  web:
    build: .
    image: nginx_web
    container_name: nginx_web
    ports:
      - 8080:8080
      - 80:80
    restart: on-failure
    depends_on:
      - api

  db:
    image: postgres:12
    container_name: chat-db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=chat-db
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgre-init/create.sql:/docker-entrypoint-initdb.d/1.sql
    restart: always

  api:
    build: chat
    container_name: chat-api
    depends_on:
      - db
    environment:
      - DB_ADDR=104.45.76.88:5432
    restart: always

  prometheus-nginx:
    image: nginx/nginx-prometheus-exporter:0.8.0
    ports:
      - 9113:9113
    entrypoint:
      - /usr/bin/exporter
      - -nginx.scrape-uri
      - http://web:80/nginx_status
    depends_on:
      - api
    restart: always

  nodeexporter:
    image: prom/node-exporter:v1.0.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - 9100:9100
    depends_on:
      - api
    labels:
      org.label-schema.group: "monitoring"

#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor:v0.37.0
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#    command:
#      - '--port=9100'
#      - /var/lib/docker:/var/lib/docker:ro
#      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
#    restart: unless-stopped
#    ports:
#      - 9100:9100
#    labels:
#      org.label-schema.group: "monitoring"

volumes:
  db-data:
    name: chat-data
